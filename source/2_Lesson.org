#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil  
#+TITLE: A Virtual LOLcat in Scratch
#+AUTHOR: Marc Scott, X Ellis, S Fone

#+BEGIN_HTML
<div class=ribbon>
<a href="https://github.com/stsb11/7-CS-lolcats">Fork me on GitHub</a>
</div>


<div id="underlay" onclick="underlayoff()">
</div>
<div id="overlay" onclick="overlayoff()">
</div>
<div id=overlayMenu>
<p onclick="overlayon('hsla(0, 0%, 50%, 0.5)')">Grey overlay</p>
<p onclick="underlayon('hsla(300,100%,50%, 0.3)')">Pink</p>
<p onclick="underlayon('hsla(80, 90%, 40%, 0.4)')">Green</p>
<p onclick="underlayon('hsla(240,100%,50%,0.2)')">Blue</p>
<p onclick="underlayon('hsla(40,100%,50%,0.3)')">Cream</p>
<p onclick="underlayon('hsla(300,100%,40%,0.3)')">Liliac</p>
<p onclick="underlayon('hsla(300,100%,25%,0.3)')">Purple</p>
<p onclick="underlayon('hsla(60,100%,50%,0.3)')">Yellow</p>
</div>

#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:
* Objectives
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Developing *Programming and Development*, *Algorithms*, *Literacy*, *Information Technology* Learning Strands:
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Understanding of what a virtual pet is.
- Understand what a sprite is and how to add new sprites.
- Understanding of basic keyboard interrupt events.
- Understanding of arithmetic operators and loops.
- Understanding of basic display coordinates.
- Use correct grammar, punctuation and spelling of keywords throughout this project.
- Use a variety of software to manipulate and present digital content.

* Virtual Pets
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Virtual pets were very common and popular a few years ago.
[[file:img/Tamagotchi.png]]
- Pets such as the [[http:http://en.wikipedia.org/wiki/Tamagotchi][Tamagotchi]] were tiny computers with software on them that simulated a pet.
- The owner of the pet had to feed it and pet it otherwise the pet would die.
- You're going to be making your own virtual pet in Scratch.
** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
- Use the web to find out some of the features that were common to most virtual pet games. A list has been started for you below:
  - /Feeding./
  - /Petting./
  - /Scolding./
* Killing our pet
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
[[file:img/Dead_cat.png]]
- *Create a new Scratch project* called *Virtual-LOL-Cat.*
- No matter how good a gamer you are, your character always dies in the end. So that's the first thing we'll be setting up.
** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
- We'll need a couple of images to begin with.
  - One to represent the *living pet.*
  - One to represent the *dead pet.*


- Here are the ones I'll be using, but you can make your own.
- If you want to *use* the *dead cat costume below*, just /right click/ and /save it/ to your *Year 7\Computer Science\MyLOLCat\* folder for uploading later.
[[file:img/Pet.svg]]
[[file:img/DeadPet.svg]]
** Code It: Costume Change
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
Our first script is going to *kill the pet*, *whenever* the /space bar/ is pressed. Killing the pet will actually just be a case of *changing* the *sprite's costume.*
- 1. Click on the Costumes Tab.
- 2. Click on the second Costume.
- 3. Delete the second costume.
- 4. Use the Upload button to add in the dead pet costume.
[[file:img/Costume_1.png]]
** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- Now we just need to make sure everything has a sensible name:
- 1. Name *both* costumes, *AlivePet* and *DeadPet.*
- 2. Name your Sprite as: *Pet*
[[file:img/Costume_2.png]]
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
We now need to write a little script to kill the pet.
Look at the code below and see if you can assemble the script.
#+BEGIN_EXAMPLE
when space key is pressed
say "You let me die!!!"
switch to DeadPet
wait 2 secs
stop all
#+END_EXAMPLE

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:
- Here is an *example* of how your Scracth code should look. Try *running it* and press the *Spacebar* to see if it works properly.
[[file:img/Cat_Death_Routine1.png]]
- The problem is that the pet stays dead.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- We need a way of resetting the script.
- Using the pseudocode below, try to code this in Scratch.
#+BEGIN_EXAMPLE
    When 'Green Flag' clicked
    Switch to Costume "AlivePet"
    Goto position x:0 y:-125               
#+END_EXAMPLE
- You might need to adjust the =y:= coordinate, depending on the size of the sprite you are using.
** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:
- Test your script to make sure it runs.
- Your pet should die when the space key is pressed, and then reset
  when you click the green flag.


* Badge It - Your Pet Death Routine
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
*** Learning strand: Programming and Development and algorithms

** Badge It: Pet Animation 1
:PROPERTIES:
:HTML_CONTAINER_CLASS: silver
:END:
*** Silver - Pet Animation 1
- The current pet death is a little undramatic.
- Try to make it a little bit more interesting, try *adding two or more minor changes* to the *pet death routine.* *Things you could add:*
  - /Could you add a little bit of animation into it?/
  - /Could you add some sound effects?/
  - /Could you have multiple costume changes?/
- After you have made the death of the cat more dramatic, *upload your
  Scratch code screenshot* and *take* [[https://www.bournetolearn.com/quizzes/y7-lolCat/Lesson_2/][this self assessment quiz]].
- You will be awarded different badges based on your work.


** Badge It: Pet Animation 2
:PROPERTIES:
:HTML_CONTAINER_CLASS: gold
:END:
*** Gold - Pet Animation 2
- You add *two more* major changes (/e.g. detailed animations, sound/)

** Badge It: Pet Animation 3
:PROPERTIES:
:HTML_CONTAINER_CLASS: platinum
:END:
*** Platinum - Pet Animation 3
- To get your platinum badge, you need to *add multiple major changes* to make the death scene more *elaborate.*
- For example:
  - /Change the stage to a grave yard./
  - /Add complex animation so that the cat dies gradually with facial changes./
  - /Sound effects./
  - /Speech and movement./

/Upload screenshots of all of your badge tasks to bournetolearn.com/
